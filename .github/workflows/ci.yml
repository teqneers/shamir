name: CI
on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]

jobs:
    test:
        runs-on: ubuntu-latest
        strategy:
            max-parallel: 2
            fail-fast: false
            matrix:
                php-version: [
                        "7.4",
                        "8.0",
                        "8.1"
                ]
                composer-param: [
                        "update --no-progress --prefer-source --prefer-lowest",
                        "update --no-progress --prefer-source"
                ]
        name: PHP ${{ matrix.php-version }} test
        steps:
            -   name: checkout project
                uses: actions/checkout@v2

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-version }}
                    extensions: bcmath
                    tools: composer:v2
                    # For PHPUnit code coverage, we need xdebug
                    coverage: xdebug

            -   name: Validate composer.json and composer.lock
                run: composer validate

            -   name: Get Composer Cache Directory
                id: composer-cache
                run: |
                  echo "::set-output name=dir::$(composer config cache-files-dir)"

            -   name: Cache Composer Downloads
                uses: actions/cache@v2.1.6
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-composer-

            -   name: Cache PHP dependencies
                uses: actions/cache@v2.1.6
                with:
                    path: vendor
                    key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}

            -   name: Install dependencies
#                if: steps.composer-cache.outputs.cache-hit != 'true'
                run: composer ${{ matrix.composer-param }}

            # Run phpunit with code coverage
            -   name: PHPUnit Tests
                run: vendor/bin/phpunit
